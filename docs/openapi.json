{
  "openapi": "3.0.3",
  "info": {
    "title": "KRAIL-CONFIG Schema API",
    "version": "1.0.0",
    "description": "API for accessing KRAIL-CONFIG schemas including festivals and notices. Each schema type has its own endpoint for better organization.",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "servers": [
    {
      "url": "https://api.krail.app",
      "description": "Production server"
    }
  ],
  "paths": {
    "/festivals": {
      "get": {
        "summary": "Get festivals schema",
        "description": "Retrieve the festivals schema with structure and examples",
        "operationId": "getFestivals",
        "security": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved festivals schema",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/festivals"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Schema not found"
          }
        }
      }
    },
    "/notice": {
      "get": {
        "summary": "Get notice schema",
        "description": "Retrieve the notice schema with structure and examples",
        "operationId": "getNotice",
        "security": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved notice schema",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notice"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Schema not found"
          }
        }
      }
    },
    "/park_ride_facilities": {
      "get": {
        "summary": "Get park_ride_facilities schema",
        "description": "Retrieve the park_ride_facilities schema with structure and examples",
        "operationId": "getPark_ride_facilities",
        "security": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved park_ride_facilities schema",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/park_ride_facilities"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Schema not found"
          }
        }
      }
    },
    "/schemas": {
      "get": {
        "summary": "List all schemas",
        "description": "Retrieve all available schemas with their structure and examples",
        "operationId": "listAllSchemas",
        "security": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved all schemas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "festivals": {
                      "$ref": "#/components/schemas/festivals"
                    },
                    "notice": {
                      "$ref": "#/components/schemas/notice"
                    },
                    "park_ride_facilities": {
                      "$ref": "#/components/schemas/park_ride_facilities"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "festivals": {
        "type": "object",
        "required": [
          "confirmedDates"
        ],
        "properties": {
          "confirmedDates": {
            "type": "array",
            "description": "List of festivals with fixed dates",
            "items": {
              "type": "object",
              "required": [
                "type",
                "month",
                "day",
                "greeting"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Festival type identifier"
                },
                "month": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 12,
                  "description": "Month (1-12)"
                },
                "day": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 31,
                  "description": "Day of month (1-31)"
                },
                "emojiList": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of emojis"
                },
                "greeting": {
                  "type": "string",
                  "description": "Greeting message"
                }
              }
            }
          },
          "variableDates": {
            "type": "array",
            "description": "List of festivals with variable dates",
            "items": {
              "type": "object",
              "required": [
                "type",
                "startDate",
                "endDate",
                "greeting"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Festival type identifier"
                },
                "startDate": {
                  "type": "string",
                  "format": "date",
                  "description": "Start date"
                },
                "endDate": {
                  "type": "string",
                  "format": "date",
                  "description": "End date"
                },
                "emojiList": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of emojis"
                },
                "greeting": {
                  "type": "string",
                  "description": "Greeting message"
                }
              }
            }
          }
        },
        "description": "Schema for festivals",
        "example": {
          "confirmedDates": [
            {
              "type": "CHRISTMAS",
              "month": 12,
              "day": 25,
              "emojiList": [
                "üéÑ",
                "üéÖ"
              ],
              "greeting": "Merry Christmas"
            },
            {
              "type": "NEW_YEAR",
              "month": 1,
              "day": 1,
              "emojiList": [
                "üéâ"
              ],
              "greeting": "Happy New Year"
            }
          ],
          "variableDates": [
            {
              "type": "EASTER",
              "startDate": "2026-04-05",
              "endDate": "2026-04-05",
              "emojiList": [
                "üê∞",
                "üê£",
                "ü•ö"
              ],
              "greeting": "Happy Easter"
            },
            {
              "type": "EID",
              "startDate": "2026-03-19",
              "endDate": "2026-03-20",
              "emojiList": [
                "üåô",
                "üïå"
              ],
              "greeting": "Eid Mubarak!"
            }
          ]
        }
      },
      "notice": {
        "type": "object",
        "required": [
          "noticeList"
        ],
        "properties": {
          "noticeList": {
            "type": "array",
            "description": "List of notice items",
            "items": {
              "type": "object",
              "required": [
                "title",
                "description",
                "imageUrl"
              ],
              "properties": {
                "title": {
                  "type": "string",
                  "description": "Notice title"
                },
                "description": {
                  "type": "string",
                  "description": "Notice description"
                },
                "imageUrl": {
                  "type": "string",
                  "format": "uri",
                  "description": "Image URL"
                },
                "buttons": {
                  "type": "array",
                  "description": "action buttons",
                  "items": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "CTA",
                          "SHARE",
                          "FEEDBACK",
                          "SOCIAL"
                        ],
                        "description": "Button type"
                      },
                      "text": {
                        "type": "string",
                        "description": "Button text (required for CTA)"
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "description": "Button URL (required for CTA and SHARE)"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Schema for notice",
        "example": {
          "noticeList": [
            {
              "title": "Card Title",
              "description": "Card description goes here.",
              "imageUrl": "https://example.com/image.jpg",
              "buttons": [
                {
                  "type": "CTA",
                  "text": "Learn More",
                  "url": "https://example.com/learn"
                },
                {
                  "type": "SHARE",
                  "url": "https://example.com/share"
                }
              ]
            },
            {
              "title": "Card with Feedback",
              "description": "Feedback example.",
              "imageUrl": "https://example.com/image2.jpg",
              "buttons": [
                {
                  "type": "FEEDBACK"
                }
              ]
            },
            {
              "title": "Card with Social",
              "description": "Social example.",
              "imageUrl": "https://example.com/image3.jpg",
              "buttons": [
                {
                  "type": "SOCIAL"
                }
              ]
            },
            {
              "title": "Card Title",
              "description": "Card description goes here.",
              "imageUrl": "https://example.com/image.jpg",
              "buttons": [
                {
                  "type": "CTA",
                  "text": "Learn More",
                  "url": "https://example.com/learn"
                }
              ]
            },
            {
              "title": "Card Title",
              "description": "Card description goes here.",
              "imageUrl": "https://example.com/image.jpg"
            }
          ]
        }
      },
      "park_ride_facilities": {
        "type": "array",
        "description": "Schema for park_ride_facilities",
        "items": {
          "type": "object",
          "required": [
            "stopId",
            "parkRideFacilityId",
            "parkRideName"
          ],
          "properties": {
            "stopId": {
              "type": "string",
              "description": "Unique identifier for the transit stop",
              "pattern": "^[0-9]+$"
            },
            "parkRideFacilityId": {
              "type": "string",
              "description": "Unique identifier for the park and ride facility",
              "pattern": "^[0-9]+$"
            },
            "parkRideName": {
              "type": "string",
              "description": "Display name of the park and ride facility",
              "minLength": 1
            }
          }
        },
        "minItems": 1,
        "uniqueItems": true,
        "example": [
          {
            "stopId": "213110",
            "parkRideFacilityId": "486",
            "parkRideName": "Park&Ride - Ashfield"
          },
          {
            "stopId": "2153478",
            "parkRideFacilityId": "31",
            "parkRideName": "Park&Ride - Bella Vista"
          },
          {
            "stopId": "220910",
            "parkRideFacilityId": "35",
            "parkRideName": "Park&Ride - Beverly Hills"
          },
          {
            "stopId": "210017",
            "parkRideFacilityId": "490",
            "parkRideName": "Park&Ride - Brookvale"
          }
        ]
      }
    }
  }
}